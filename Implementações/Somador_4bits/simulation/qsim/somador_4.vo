// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "09/14/2018 14:30:40"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module somador_4 (
	b,
	a,
	c0,
	s,
	c4);
input 	[3:0] b;
input 	[3:0] a;
input 	c0;
output 	[3:0] s;
output 	c4;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \s[0]~output_o ;
wire \s[1]~output_o ;
wire \s[2]~output_o ;
wire \s[3]~output_o ;
wire \c4~output_o ;
wire \c0~input_o ;
wire \b[0]~input_o ;
wire \a[0]~input_o ;
wire \SC0|MS2|s~combout ;
wire \b[1]~input_o ;
wire \a[1]~input_o ;
wire \SC1|MS2|s~combout ;
wire \SC1|cout~combout ;
wire \b[2]~input_o ;
wire \a[2]~input_o ;
wire \SC2|MS2|s~combout ;
wire \b[3]~input_o ;
wire \a[3]~input_o ;
wire \SC3|MS2|s~combout ;
wire \SC3|cout~combout ;


cyclonev_io_obuf \s[0]~output (
	.i(\SC0|MS2|s~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[0]~output .bus_hold = "false";
defparam \s[0]~output .open_drain_output = "false";
defparam \s[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[1]~output (
	.i(\SC1|MS2|s~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[1]~output .bus_hold = "false";
defparam \s[1]~output .open_drain_output = "false";
defparam \s[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[2]~output (
	.i(\SC2|MS2|s~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[2]~output .bus_hold = "false";
defparam \s[2]~output .open_drain_output = "false";
defparam \s[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[3]~output (
	.i(\SC3|MS2|s~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[3]~output .bus_hold = "false";
defparam \s[3]~output .open_drain_output = "false";
defparam \s[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \c4~output (
	.i(\SC3|cout~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\c4~output_o ),
	.obar());
// synopsys translate_off
defparam \c4~output .bus_hold = "false";
defparam \c4~output .open_drain_output = "false";
defparam \c4~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \c0~input (
	.i(c0),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\c0~input_o ));
// synopsys translate_off
defparam \c0~input .bus_hold = "false";
defparam \c0~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[0]~input (
	.i(b[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[0]~input_o ));
// synopsys translate_off
defparam \b[0]~input .bus_hold = "false";
defparam \b[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[0]~input (
	.i(a[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[0]~input_o ));
// synopsys translate_off
defparam \a[0]~input .bus_hold = "false";
defparam \a[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \SC0|MS2|s (
// Equation(s):
// \SC0|MS2|s~combout  = !\c0~input_o  $ (!\b[0]~input_o  $ (\a[0]~input_o ))

	.dataa(!\c0~input_o ),
	.datab(!\b[0]~input_o ),
	.datac(!\a[0]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\SC0|MS2|s~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \SC0|MS2|s .extended_lut = "off";
defparam \SC0|MS2|s .lut_mask = 64'h6969696969696969;
defparam \SC0|MS2|s .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \b[1]~input (
	.i(b[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[1]~input_o ));
// synopsys translate_off
defparam \b[1]~input .bus_hold = "false";
defparam \b[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[1]~input (
	.i(a[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[1]~input_o ));
// synopsys translate_off
defparam \a[1]~input .bus_hold = "false";
defparam \a[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \SC1|MS2|s (
// Equation(s):
// \SC1|MS2|s~combout  = ( \a[1]~input_o  & ( !\b[1]~input_o  $ (((!\c0~input_o  & (\b[0]~input_o  & \a[0]~input_o )) # (\c0~input_o  & ((\a[0]~input_o ) # (\b[0]~input_o ))))) ) ) # ( !\a[1]~input_o  & ( !\b[1]~input_o  $ (((!\c0~input_o  & ((!\b[0]~input_o 
// ) # (!\a[0]~input_o ))) # (\c0~input_o  & (!\b[0]~input_o  & !\a[0]~input_o )))) ) )

	.dataa(!\c0~input_o ),
	.datab(!\b[0]~input_o ),
	.datac(!\a[0]~input_o ),
	.datad(!\b[1]~input_o ),
	.datae(!\a[1]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\SC1|MS2|s~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \SC1|MS2|s .extended_lut = "off";
defparam \SC1|MS2|s .lut_mask = 64'h17E8E81717E8E817;
defparam \SC1|MS2|s .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \SC1|cout (
// Equation(s):
// \SC1|cout~combout  = ( \a[1]~input_o  & ( ((!\c0~input_o  & (\b[0]~input_o  & \a[0]~input_o )) # (\c0~input_o  & ((\a[0]~input_o ) # (\b[0]~input_o )))) # (\b[1]~input_o ) ) ) # ( !\a[1]~input_o  & ( (\b[1]~input_o  & ((!\c0~input_o  & (\b[0]~input_o  & 
// \a[0]~input_o )) # (\c0~input_o  & ((\a[0]~input_o ) # (\b[0]~input_o ))))) ) )

	.dataa(!\c0~input_o ),
	.datab(!\b[0]~input_o ),
	.datac(!\a[0]~input_o ),
	.datad(!\b[1]~input_o ),
	.datae(!\a[1]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\SC1|cout~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \SC1|cout .extended_lut = "off";
defparam \SC1|cout .lut_mask = 64'h001717FF001717FF;
defparam \SC1|cout .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \b[2]~input (
	.i(b[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[2]~input_o ));
// synopsys translate_off
defparam \b[2]~input .bus_hold = "false";
defparam \b[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[2]~input (
	.i(a[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[2]~input_o ));
// synopsys translate_off
defparam \a[2]~input .bus_hold = "false";
defparam \a[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \SC2|MS2|s (
// Equation(s):
// \SC2|MS2|s~combout  = !\SC1|cout~combout  $ (!\b[2]~input_o  $ (\a[2]~input_o ))

	.dataa(!\SC1|cout~combout ),
	.datab(!\b[2]~input_o ),
	.datac(!\a[2]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\SC2|MS2|s~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \SC2|MS2|s .extended_lut = "off";
defparam \SC2|MS2|s .lut_mask = 64'h6969696969696969;
defparam \SC2|MS2|s .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \b[3]~input (
	.i(b[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[3]~input_o ));
// synopsys translate_off
defparam \b[3]~input .bus_hold = "false";
defparam \b[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[3]~input (
	.i(a[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[3]~input_o ));
// synopsys translate_off
defparam \a[3]~input .bus_hold = "false";
defparam \a[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \SC3|MS2|s (
// Equation(s):
// \SC3|MS2|s~combout  = ( \a[3]~input_o  & ( !\b[3]~input_o  $ (((!\SC1|cout~combout  & (\b[2]~input_o  & \a[2]~input_o )) # (\SC1|cout~combout  & ((\a[2]~input_o ) # (\b[2]~input_o ))))) ) ) # ( !\a[3]~input_o  & ( !\b[3]~input_o  $ (((!\SC1|cout~combout  
// & ((!\b[2]~input_o ) # (!\a[2]~input_o ))) # (\SC1|cout~combout  & (!\b[2]~input_o  & !\a[2]~input_o )))) ) )

	.dataa(!\SC1|cout~combout ),
	.datab(!\b[2]~input_o ),
	.datac(!\a[2]~input_o ),
	.datad(!\b[3]~input_o ),
	.datae(!\a[3]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\SC3|MS2|s~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \SC3|MS2|s .extended_lut = "off";
defparam \SC3|MS2|s .lut_mask = 64'h17E8E81717E8E817;
defparam \SC3|MS2|s .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \SC3|cout (
// Equation(s):
// \SC3|cout~combout  = ( \a[3]~input_o  & ( ((!\SC1|cout~combout  & (\b[2]~input_o  & \a[2]~input_o )) # (\SC1|cout~combout  & ((\a[2]~input_o ) # (\b[2]~input_o )))) # (\b[3]~input_o ) ) ) # ( !\a[3]~input_o  & ( (\b[3]~input_o  & ((!\SC1|cout~combout  & 
// (\b[2]~input_o  & \a[2]~input_o )) # (\SC1|cout~combout  & ((\a[2]~input_o ) # (\b[2]~input_o ))))) ) )

	.dataa(!\SC1|cout~combout ),
	.datab(!\b[2]~input_o ),
	.datac(!\a[2]~input_o ),
	.datad(!\b[3]~input_o ),
	.datae(!\a[3]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\SC3|cout~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \SC3|cout .extended_lut = "off";
defparam \SC3|cout .lut_mask = 64'h001717FF001717FF;
defparam \SC3|cout .shared_arith = "off";
// synopsys translate_on

assign s[0] = \s[0]~output_o ;

assign s[1] = \s[1]~output_o ;

assign s[2] = \s[2]~output_o ;

assign s[3] = \s[3]~output_o ;

assign c4 = \c4~output_o ;

endmodule
